@namespace UpsAndDowns.Components
@inject IJSRuntime JsRuntime

<link href="css/player.css" rel="stylesheet" />

<div class="modal" tabindex="-1" style="display:block;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">What has happened to Player #@SelectedPlayer?.PlayerNumber?</h5>
            </div>
            <div class="modal-body">
                @if (SelectedPanel == "movedOnBoard")
                {
                    <div>
                        <h5>Moved On Board</h5>
                        <p>Details about moving on board...</p>
                        <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await SetLandedSpace("Blank"))">Blank Space</button>
                        <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await SetLandedSpace("Education"))">Education Space</button>
                        <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await SetLandedSpace("Promotion"))">Promotion Space</button>
                        <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await SetLandedSpace("Marriage"))">Marriage Space</button>
                        <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await SetLandedSpace("Events"))">Events Space</button>
                        <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await SetLandedSpace("Car"))">Buy Car Space</button>
                        <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await SetLandedSpace("House"))">Buy House Space</button>
                    </div>
                }
                else if (SelectedPanel == "cashMoney")
                {
                    <div>
                        <h2>$$@CashMoneyAdjustmentValue</h2>
                        <h5>Gained Cash Money?</h5>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow green" onclick="@(async () => await AdjustCashMoney(100))">+ $$100</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow green" onclick="@(async () => await AdjustCashMoney(1000))">+ $$1000</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow green" onclick="@(async () => await AdjustCashMoney(10000))">+ $$10k</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow green" onclick="@(async () => await AdjustCashMoney(100000))">+ $$100k</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow green" onclick="@(async () => await AdjustCashMoney(1000000))">+ $$1MM</button>
                        <h5>Lost Cash Money?</h5>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow red" onclick="@(async () => await AdjustCashMoney(-100))">- $$100</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow red" onclick="@(async () => await AdjustCashMoney(-1000))">- $$1000</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow red" onclick="@(async () => await AdjustCashMoney(-10000))">- $$10k</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow red" onclick="@(async () => await AdjustCashMoney(-100000))">- $$100k</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow red" onclick="@(async () => await AdjustCashMoney(-1000000))">- $$1MM</button>
                        <h5>Done?</h5>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow" onclick="@(async () => await SetCashMoney())">Apply</button>
                    </div>
                }
                else if (SelectedPanel == "lifePoints")
                {
                    <div>
                        <h2>LP @LifePointsAdjustmentValue</h2>
                        <h5>Gained Life Points?</h5>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow green" onclick="@(async () => await AdjustLifePoints(100))">+ LP100</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow green" onclick="@(async () => await AdjustLifePoints(1000))">+ LP1000</button>
                        <h5>Lost Life Points?</h5>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow red" onclick="@(async () => await AdjustLifePoints(-100))">- LP100</button>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow red" onclick="@(async () => await AdjustLifePoints(-1000))">- LP1000</button>
                        <h5>Done?</h5>
                        <button type="button" class="btn btn-primary player-menu-buttons narrow" onclick="@(async () => await SetLifePoints())">Apply</button>
                    </div>
                }
                else if (SelectedPanel == "salary")
                {
                    <div>
                        <h5>Salary</h5>
                        <p>Details about salary...</p>
                    </div>
                }
                else if (SelectedPanel == "house")
                {
                    <div>
                        <h5>House</h5>
                        <p>Details about house...</p>
                    </div>
                }
                else if (SelectedPanel == "car")
                {
                    <div>
                        <h5>Car</h5>
                        <p>Details about car...</p>
                    </div>
                }
                else if (SelectedPanel == "education")
                {
                    <div>
                        <h5>Education</h5>
                        <p>Details about education...</p>
                    </div>
                }
                else if (SelectedPanel == "career")
                {
                    <div>
                        <h5>Career</h5>
                        <p>Details about career...</p>
                    </div>
                }
                else if (SelectedPanel == "marriage")
                {
                    <div>
                        <h5>Marriage</h5>
                        <p>Details about marriage...</p>
                    </div>
                }
                else if (SelectedPanel == "children")
                {
                    <div>
                        <h5>Children</h5>
                        <p>Details about children...</p>
                    </div>
                }
                else {
                    <h4>The Usual Happened</h4>
                    <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await ShowPanel("movedOnBoard"))">Moved On Board</button>
                    <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await ShowPanel("cashMoney"))">Cash Money</button>
                    <button type="button" class="btn btn-primary player-menu-buttons standard" onclick="@(async () => await ShowPanel("lifePoints"))">Life Points</button>
                    <h4>Something Else Changed</h4>
                    <button type="button" class="btn btn-primary player-menu-buttons assets" onclick="@(async () => await ShowPanel("salary"))">Salary</button>
                    <button type="button" class="btn btn-primary player-menu-buttons assets" onclick="@(async () => await ShowPanel("house"))">House</button>
                    <button type="button" class="btn btn-primary player-menu-buttons assets" onclick="@(async () => await ShowPanel("car"))">Car</button>
                    <button type="button" class="btn btn-primary player-menu-buttons life-events" onclick="@(async () => await ShowPanel("education"))">Education</button>
                    <button type="button" class="btn btn-primary player-menu-buttons life-events" onclick="@(async () => await ShowPanel("career"))">Career</button>
                    <button type="button" class="btn btn-primary player-menu-buttons life-events" onclick="@(async () => await ShowPanel("marriage"))">Marriage</button>
                    <button type="button" class="btn btn-primary player-menu-buttons life-events" onclick="@(async () => await ShowPanel("children"))">Children</button>
                }
            </div>
            <div class="modal-footer operations">
                @if (SelectedPanel != "default")
                {
                    <button type="button" class="btn btn-secondary ops-back" onclick="@(async () => await ShowPanel("default"))">Back</button>
                }
                <button type="button" class="btn btn-secondary ops-close" @onclick="async () => await OnClick.InvokeAsync(null)">Close</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Player? SelectedPlayer { get; set; }
    [Parameter]
    public EventCallback OnClick { get; set; }

    public string SelectedPanel = "default";
    public int CashMoneyAdjustmentValue = 0;
    public int LifePointsAdjustmentValue = 0;

    protected override void OnInitialized()
    {
        //Console.WriteLine($"Rendering PlayerDetailsComponent for Player {Player.PlayerNumber}");
    }

    public async Task ShowPanel(string panel)
    {
        Console.WriteLine("ShowPanel: '" + panel + "' for player " + SelectedPlayer?.PlayerNumber);
        SelectedPanel = panel;
        CashMoneyAdjustmentValue = 0;
    }

    public async Task SetLandedSpace(string space)
    {
        Console.WriteLine("SetLandedSpace: '" + space + "' for player " + SelectedPlayer?.PlayerNumber);
        SelectedPlayer?.SetLandedSpace(space);
        SelectedPanel = "default";
    }

    public async Task AdjustCashMoney(int amount)
    {
        Console.WriteLine("AdjustCashMoney: '" + amount + "' for player " + SelectedPlayer?.PlayerNumber);
        CashMoneyAdjustmentValue += amount;
    }

    public async Task SetCashMoney()
    {
        Console.WriteLine("SetCashMoney: '" + CashMoneyAdjustmentValue + "' for player " + SelectedPlayer?.PlayerNumber);
        SelectedPlayer?.AdjustCashMoney(CashMoneyAdjustmentValue);
    }

    public async Task AdjustLifePoints(int amount)
    {
        Console.WriteLine("AdjustLifePoints: '" + amount + "' for player " + SelectedPlayer?.PlayerNumber);
        LifePointsAdjustmentValue += amount;
    }

    public async Task SetLifePoints()
    {
        Console.WriteLine("SetLifePoints: '" + LifePointsAdjustmentValue + "' for player " + SelectedPlayer?.PlayerNumber);
        SelectedPlayer?.AdjustLifePoints(LifePointsAdjustmentValue);
    }
}